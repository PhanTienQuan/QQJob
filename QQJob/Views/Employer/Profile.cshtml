@using Newtonsoft.Json
@model EmployerProfileViewModel
@{
    ViewBag.Title = "Profile";
}
<style>
    .button-row {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 80px;
    }

    .evidence-upload__label {
        margin-top: 30px;
        max-width: -moz-max-content;
        max-width: max-content;
        margin-left: 15px;
        border-radius: 6px;

        display: inline-block;
        background-color: #4f46e5;
        color: white;
        padding: 12px 20px;
        cursor: pointer;
        transition: background-color 0.2s ease;
    }

    .evidence-upload__label:hover {
        background-color: #4338ca;
    }

    .evidence-upload__input {
        display: none;
    }
    
    .select__evidence {
        margin-top: 30px;
    }
</style>
<!-- content area -->
<div class="dashboard__content d-flex template-dashboard">
    <partial name="_LeftMenu" />
    <div class="dashboard__right">
        <div class="dash__content" id="content-area">
            <!-- sidebar menu -->
            <div class="sidebar__menu d-md-block d-lg-none">
                <div class="sidebar__action"><i class="fa-sharp fa-regular fa-bars"></i>Sidebar</div>
            </div>
            <form asp-action="Profile" asp-controller="Employer" method="post" enctype="multipart/form-data">
                <!-- sidebar menu end -->
                <div class="my__profile__tab radius-16 bg-white">
                    <nav>
                        <div class="nav nav-tabs">
                            <a class="nav-link active" href="#info">My Details</a>
                            <a class="nav-link " href="#social">Social Links</a>
                        </div>
                    </nav>
                    <div class="my__details" id="info">
                        <div class="info__top">
                            <div class="author__image">
                                <img id="avatar" class="p-4" src="@Model.Avatar" alt="" />
                            </div>
                            <div class="select__image">
                                <label asp-for="AvatarFile" class="file-upload__label">Upload New Photo</label>
                                <input type="file" class="file-upload__input" asp-for="AvatarFile" accept="image/*" />
                            </div>
                            <div class="delete__data">
                                <i class="fa-light fa-trash-can"></i>
                            </div>
                        </div>
                        <div class="info__field">
                            <div class="row row-cols-sm-2 row-cols-1 g-3">
                                @Html.HiddenFor(e => e.Id)
                                @Html.HiddenFor(e => e.Avatar)
                                <div class="rt-input-group">
                                    <label asp-for="FullName">Employer name</label>
                                    <input asp-for="FullName" placeholder="PTQ Tech" class="mb-3" required />
                                    <span asp-validation-for="FullName" class="text-danger"></span>
                                </div>
                                <div class="rt-input-group">
                                    <label asp-for="Email">Email</label>
                                    <input type="email" value="@Model.Email" placeholder="ptqtech@gmail.com" class="mb-3" disabled />
                                </div>
                                <input type="hidden" asp-for="Email" />
                            </div>
                            <div class="row row-cols-sm-2 row-cols-1 g-3">
                                <div class="rt-input-group">
                                    <label asp-for="PhoneNumber">Phone</label>
                                    <input asp-for="PhoneNumber" placeholder="+880171234567" class="mb-3" />
                                    <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                                </div>
                                <div class="rt-input-group">
                                    <label asp-for="Website">Website</label>
                                    <input type="url" asp-for="Website" placeholder="QQJob.com" class="mb-3" />
                                    <span asp-validation-for="Website" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="row row-cols-sm-2 row-cols-1 g-3">
                                <div class="rt-input-group">
                                    <label asp-for="FoundedDate">Founded Date</label>
                                    <input type="date" placeholder="DD/MM/YY" asp-for="FoundedDate" class="mb-3" max="@DateTime.Now.ToString("yyyy-MM-dd")" />
                                    <span asp-validation-for="FoundedDate" class="text-danger"></span>
                                </div>
                                <div class="position-relative">
                                    <div class="rt-input-group">
                                        <label asp-for="CompanySize">Company Size</label>
                                        <input type="text" asp-for="CompanySize" class="mb-3" placeholder="10 - 20" />
                                        <span asp-validation-for="CompanySize" class="text-danger"></span>
                                    </div>
                                    <span asp-validation-for="CompanySize"></span>
                                </div>
                            </div>
                            <div class="row row-cols-sm-2 row-cols-1 g-3">
                                <div class="position-relative">
                                    <div class="rt-input-group">
                                        <label for="pv">Public For Profile View</label>
                                        <select name="PublicProfile" id="pv" class="form-select">
                                            <option value="1">Yes</option>
                                            <option value="2">No</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="position-relative">
                                    <div class="rt-input-group">
                                        <label asp-for="IsVerified">Verified status</label>
                                        @Helper.DisplayUserStatus(Model.IsVerified)
                                    </div>
                                </div>
                            </div>
                            <div class="row row-cols-sm-1 row-cols-1 g-3">
                                <label for="pv" style="color:black;">Company Field</label>
                                <div class="my__skillset">
                                    <ul class="skill__tags">
                                        @if(Model.CompanyField == null){
                                            <li class="placeholder"><span>Your company have not add any field yet</span></li>
                                        }
                                        <li class="add__btn"><span class="skill__item__add"><i class="fa-regular fa-plus"></i></span></li>
                                    </ul>
                                </div>
                                @Html.HiddenFor(e => e.CompanyField)
                            </div>
                        </div>
                    </div>
                </div>

                <h6 class="fw-medium mt-4 mb-4">Social Links</h6>
                <div class="social__links p-30 radius-16 bg-white" id="social">
                    <div class="info__field">
                        <div class="row row-cols-sm-2 row-cols-1 g-3" id="socialLinksContainer">

                        </div>
                        <div class="d-block">
                            <a href="#" id="addSocialLinkBtn" class="added__social__link">Add Another Network</a>
                        </div>
                    </div>
                </div>

                <div class="info__field">
                    <button type="submit" class="rts__btn fill__btn mx-0">Save Profile</button>
                </div>

            </form>
            <form id="uploadEvident" asp-controller="Employer" asp-action="UploadEvident" method="post" enctype="multipart/form-data">
                <div id="evident-wrapper">
                    <input type="hidden" name="userId" value="@Model.Id" />
                    <h6 class="fw-medium mt-4 mb-4">Company Evident</h6>
                    <div class="social__links p-30 radius-16 bg-white" id="evident">
                        @if (Model.CompanyEvidentUrl != null)
                        {
                            var url = Model.CompanyEvidentUrl.ToLower();

                            if (url.EndsWith(".pdf"))
                            {
                                <iframe src="@Model.CompanyEvidentUrl" width="100%" height="600px" style="border:none;"></iframe>
                            }
                            else if (url.EndsWith(".jpg") || url.EndsWith(".jpeg") || url.EndsWith(".png") || url.EndsWith(".gif") || url.EndsWith(".webp"))
                            {
                                <img src="@Model.CompanyEvidentUrl" alt="Company Evidence" style="max-width:100%; border-radius:8px;" />
                            }
                            else
                            {
                                <a href="@Model.CompanyEvidentUrl" download target="_blank" rel="noopener noreferrer">Download Evidence</a>
                            }
                        }
                    </div>
                    <div class="info__field">
                        <div class="button-row">
                            <button type="submit" class="rts__btn fill__btn mx-0">Save</button>
                            <label for="uploadEvidence" class="evidence-upload__label">Upload Evidence</label>
                            <input type="file" name="file" class="evidence-upload__input" accept="*" id="uploadEvidence" />
                        </div>
                    </div>
                </div>
            </form>

        </div>
    </div>
</div>
@section Scripts {
    <script type="module">
        let currentTempFile = null;
        async function uploadToServerAndConvert(file) {
            const formData = new FormData();
            formData.append("file", file);

            try {
                const response = await fetch('/Employer/ConvertToPdf', {
                    method: 'POST',
                    body: formData
                });

                if (response.ok) {
                    const result = await response.json();
                    return result.pdfUrl;
                } else {
                    console.error('Failed to upload and convert:', response.statusText);
                    return null;
                }
            } catch (err) {
                console.error('Error uploading:', err);
                return null;
            }
        }

        document.getElementById("uploadEvidence").addEventListener("change", async function(event) {
            const file = event.target.files[0];
            const wrapper = document.getElementById("evident-wrapper");
            const container = document.getElementById("evident");

            if (!file) {
                return;
            }

            container.innerHTML = "";
            const fileType = file.type;

            if (fileType.startsWith("image/")) {
                const img = document.createElement("img");
                img.src = URL.createObjectURL(file);
                img.style.maxWidth = "100%";
                img.style.borderRadius = "8px";
                container.appendChild(img);
            } else if (fileType === "application/pdf") {
                const iframe = document.createElement("iframe");
                iframe.src = URL.createObjectURL(file);
                iframe.style.width = "100%";
                iframe.style.height = "600px";
                iframe.style.border = "none";
                container.appendChild(iframe);
            }else if (fileType === 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' ||
                fileType === 'application/msword') {
                const processingText = document.createElement("div");
                processingText.textContent = "Processing...";
                processingText.style.fontSize = "1rem";
                processingText.style.marginBottom = "10px";
                processingText.style.color = "#555";

                // Add to container
                container.appendChild(processingText);
                // Upload to server and convert
                const pdfUrl = await uploadToServerAndConvert(file);
                container.innerHTML = "";
                if (pdfUrl) {
                    const iframe = document.createElement("iframe");
                    iframe.src = pdfUrl;
                    iframe.style.width = "100%";
                    iframe.style.height = "600px";
                    iframe.style.border = "none";
                    container.appendChild(iframe);
                } else {
                    const div = document.createElement("div");
                    div.textContent = "Failed to convert Word to PDF.";
                    container.appendChild(div);
                }
            } else {
                const div = document.createElement("div");
                div.classList.add("file-preview");

                const icon = document.createElement("span");
                icon.textContent = "📄";
                icon.style.fontSize = "2rem";
                icon.style.marginRight = "10px";

                const fileName = document.createElement("span");
                fileName.textContent = file.name;

                div.appendChild(icon);
                div.appendChild(fileName);
                container.appendChild(div);
            }
            wrapper.scrollIntoView({ behavior: 'smooth', block: 'center' });
        });
    </script>
    <script>
        const socialLinks = @Html.Raw(JsonConvert.SerializeObject(Model.SocialLinks ?? new List<SocialLink>()));
        const companyField = @Html.Raw(Json.Serialize(Model.CompanyField?.Split(',') ?? new string[0]));
        document.addEventListener("DOMContentLoaded", () => {
            initializeSocialLinksManager({
                socialLinksContainerSelector: "#socialLinksContainer",
                addSocialLinkBtnSelector: "#addSocialLinkBtn",
                maxSocialLinks: 4,
                initialLinks: socialLinks,
                errorMessage: "Your company can only have 4 social links!"
            });

            initializeSkillTagsManager({
                tagsSelector: ".skill__tags",
                addBtnSelector: ".add__btn",
                inputSelector: "#CompanyField",
                initialValue: companyField,
                inputPlaceholder: "Enter your field",
                emptyPlaceholder: "Your company has not added any fields yet"
            });
        });
        document.getElementById('AvatarFile').addEventListener('change', function(event) {
            const fileInput = event.target;
            const file = fileInput.files[0]; // Get the selected file

            if (file) {
                // Create a URL for the selected image
                const imgURL = URL.createObjectURL(file);

                // Update the src of the avatar image
                const avatarImg = document.getElementById('avatar');
                avatarImg.src = imgURL;

                // Optionally revoke the object URL later to release memory
                avatarImg.onload = () => URL.revokeObjectURL(imgURL);
            }
        });
        document.querySelector('.delete__data i').addEventListener('click', function() {
            const avatarImg = document.getElementById('avatar');
            const fileInput = document.getElementById('file');

            // Reset the image source to the default
            avatarImg.src = '@Model.Avatar'; // Replace with the default image path
            fileInput.value = ''; // Clear the file input
        });
    </script>
}