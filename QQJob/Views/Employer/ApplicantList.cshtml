@model ApplicantListViewModel
@{
    ViewBag.Title = "Applicant List";
    var statuses = Enum.GetValues(typeof(ApplicationStatus)).Cast<ApplicationStatus>();
}
<!-- content area -->
<div class="dashboard__content d-flex">
    <partial name="_LeftMenu" />
    <div class="dashboard__right">
        <div class="dash__content" id="content-area">
            <!-- sidebar menu -->
            <div class="sidebar__menu d-md-block d-lg-none">
                <div class="sidebar__action"><i class="fa-sharp fa-regular fa-bars"></i>Sidebar</div>
            </div>
            <!-- sidebar menu end -->
            <div class="applied__job__info radius-16">
                <form id="searchForm" method="get" data-ajax="true" data-ajax-method="get" data-ajax-update=".applied__job__list" data-ajax-mode='replace' data-ajax-url="@Url.Action("GetApplicationListPartial","Employer")">
                    <div class="job__filter">
                        <div class="search__job">
                            <div class="position-relative">
                                <input asp-for="SearchValue" placeholder="Search">
                                <i class="fa-light fa-magnifying-glass"></i>
                            </div>
                        </div>
                        <div class="search__job">
                            <div class="position-relative">
                                <input asp-for="FromDate" type="date" title="Select a date in DD/MM/YYYY format">
                                <i class="fa-light fa-magnifying-glass"></i>
                            </div>
                        </div>
                        <div class="filter__job">
                            <div class="nice-select filter__select">
                                <span class="current">All Category</span>
                                <ul class="list">
                                    <li data-value="-1" class="option">All Category</li>
                                    @foreach (var status in statuses)
                                    {
                                        <li data-value="@((int)status)" class="option @(Model.SearchStatus != null && Model.SearchStatus == status ? "focus selected" : "")">@status</li>
                                    }
                                </ul>
                            </div>
                        </div>
                    </div>
                    @Html.HiddenFor(m => m.SearchStatus)
                    @Html.HiddenFor(m => m.Paging.CurrentPage)
                </form>

                <div class="applied__job__list">
                    <partial name="_ApplicantList" for="@Model"></partial>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-ajax-unobtrusive/3.2.6/jquery.unobtrusive-ajax.min.js"></script>
    <script>
        const searchForm = $("#searchForm");
        $("#SearchValue").on("input", function() {
            $("#Paging_CurrentPage").val(1);
            searchForm.submit();
        });

        $(".list .option").on("click",function () {
            $("#Paging_CurrentPage").val(1);
            $("#SearchStatus").val($(this).data("value"));
            searchForm.submit();
        });

        $('#ToDate').on("change", function () {
            $("#Paging_CurrentPage").val(1);
            $("#FromDate").attr("max", $(this).val());
            searchForm.submit();
        });
        var selectedApplicationId = 0;
        var selectedNextStatus = 0;

        // Next Status button click
        document.querySelectorAll('.next-status-btn').forEach(function (btn) {
            btn.addEventListener('click', function () {
                selectedApplicationId = this.getAttribute('data-application-id');
                selectedNextStatus = this.getAttribute('data-next-status');
                var actionTitle = this.getAttribute('data-next-title');
                document.getElementById('nextStatusAction').innerText = actionTitle;
            });
        });

        // Confirm Next Status click
        document.getElementById('confirmNextStatusBtn').addEventListener('click', function () {
            fetch('/Employer/MoveToNextStatusAjax', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ applicationId: Number(selectedApplicationId) })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Show toast only on success
                    showToastMessage(data.message, "success");

                    // Optional: update status badge or reload
                    location.reload();
                } else {
                    // Show error toast
                    showToastMessage(data.message, "error");
                }
            });
        });

        // Reject button click
        document.querySelectorAll('.reject-btn').forEach(function (btn) {
            btn.addEventListener('click', function () {
                selectedApplicationId = this.getAttribute('data-application-id');
            });
        });

        // Confirm Reject click
        document.getElementById('confirmRejectBtn').addEventListener('click', function () {
            fetch('/Employer/RejectApplicationAjax', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ applicationId: Number(selectedApplicationId) })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Show toast only on success
                    showToastMessage(data.message, "success");

                    // Optional: update status badge or reload
                    location.reload();
                } else {
                    // Show error toast
                    showToastMessage(data.message, "error");
                }
            });
        });
    </script>
}