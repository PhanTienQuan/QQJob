@using Microsoft.AspNetCore.Identity
@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager
@{
    var currentController = ViewContext.RouteData.Values["controller"]?.ToString();
    AppUser? currentUser = null;
    string? userRole = null;

    if (SignInManager.IsSignedIn(User))
    {
        currentUser = await UserManager.GetUserAsync(User);
        userRole = (await UserManager.GetRolesAsync(currentUser)).FirstOrDefault();
    }
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content="Your Ultimate Job Template" />
    <meta name="keywords" content="Job, Resume, Employer, Agency" />
    <link rel="canonical" href="https://html.themewant.com/QQJob" />
    <meta name="robots" content="index, follow" />
    <!-- Open Graph Meta -->
    <meta property="og:title" content="Your Ultimate Job Template" />
    <meta property="og:description" content="Your Ultimate Job Template" />
    <meta property="og:image" content="www.example.com/image.html" />
    <meta property="og:url" content="https://html.themewant.com/QQJob/" />
    <!-- Twitter Meta -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content="Your Ultimate Job Template" />
    <meta name="twitter:description" content="Your Ultimate Job Template" />
    <!-- Favicon -->
    <link rel="icon" href="~/assets/img/favicon.ico" type="image/x-icon" />
    <!-- Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:wght@200..800&display=swap" rel="stylesheet" />
    <!-- Styles -->
    <link rel="stylesheet" href="~/assets/fonts/icon/css/rt-icons.css" />
    <link rel="stylesheet" href="~/assets/fonts/fontawesome/fontawesome.min.css" />
    <link rel="stylesheet" href="~/assets/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/assets/css/style.css" />
    <link rel="stylesheet" href="~/assets/css/app.css" />
    <link href="https://fonts.googleapis.com/css2?family=Roboto&family=Open+Sans&family=Poppins&display=swap" rel="stylesheet">
    @RenderSection("Styles", required: false)
    <title>@ViewData["Title"] - QQJob</title>
</head>


<body>

    <partial name="_Header" />

    @RenderBody()
    @if (currentController != "Employer" && currentController != "Candidate")
    {
        <partial name="_Footer" />
    }

    <partial name="_ChatBox" />
    <partial name="_ForgotPasswordModal" />
    <!-- THEME PRELOADER START -->
    <div class="loader-wrapper">
        <div class="loader"></div>
        <div class="loader-section section-left"></div>
        <div class="loader-section section-right"></div>
    </div>
    <!-- THEME PRELOADER END -->

    <button type="button" class="rts__back__top" id="rts-back-to-top">
        <i class="fas fa-arrow-up"></i>
    </button>

    <div id="modalPlaceholder"></div>
    <div id="overlay" style="display: none;"></div>
    <div class="toast-container position-fixed bottom-0 end-0 p-3" aria-live="polite" aria-atomic="true">
        <!-- New toasts will appear here -->
    </div>

    <!-- all plugin js -->
    <script src="~/assets/js/jquery.min.js"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/assets/js/main.js"></script>
    <script src="~/assets/js/app.js"></script>
    @if (userRole == "Employer")
    {
        <script src="~/assets/js/employer.js"></script>
    }
    <link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
    <script src="https://cdn.quilljs.com/1.3.6/quill.min.js"></script>
    <script>
        
        const messageData = @Html.Raw(TempData["Message"] ?? "\"\"");
        if (messageData != "") {
            showToastMessage(messageData.message, messageData.type);
        }
        if (window.location.search.includes("ReturnUrl")) {
            showLoginModal();
        }
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
          return new bootstrap.Tooltip(tooltipTriggerEl)
        })
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
